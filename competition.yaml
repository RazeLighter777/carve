# Example configuration for the canary service
# This file defines competitions, teams, boxes, and checks for scoring
competitions:
  # Example configuration for the canary service
# This file defines competitions, teams, boxes, and checks for scoring
  - name: CarveCTF
    cidr: 10.13.0.0/16  # CIDR for the competition networkss
    redis:
      host: redis
      port: 6379       # Redis port
      db: 0            # Redis database number
    vtep_host: vtep  # VTEP hostname for VXLAN
    admin_group: "booktok-users"  # Admin group for the competition
    duration: 3600  # Competition duration in seconds (1 hour)
    oidc_provider_name: Authentik  # OIDC provider name for authentication
    registration_type: Join  # Registration type OidcOnly means it just pulls the groups from the OIDC provider
    identity_sources:
      - "OIDC"
      - "LocalUserPassword"
    create_default_admin: true  # Create a default admin user
    boxes:
      # Define service boxes that will be checked
      - name: web
        labels: http
        hostname: "web-server"
        cores: 2
        ram_mb: 2048
        backing_image: "/disks/ubuntu/ubuntu-24.04-nocloud.qcow2"
      - name: db
        labels: db
        hostname: "db"
        cores: 4
        ram_mb: 4096
        backing_image: "/disks/ubuntu/ubuntu-24.04-nocloud.qcow2"
      - name: auth
        labels: auth
        hostname: "auth"
        cores: 1
        ram_mb: 1024
        backing_image: "/disks/ubuntu/ubuntu-24.04-nocloud.qcow2"
    teams:
      # List of competing teams
      - name: team1
      - name: team2
      - name: team3
    checks:
      # HTTP check example
      - name: http-example
        description: "Checks that all boxes with the 'http' label are running a web server."
        interval: 15       # Run every 15 seconds
        points: 5          # Points awarded when successful
        labelSelector:
          "": http        # Only run on boxes with the 'http' label
        spec:
          type: http
          url: /index.html
          code: 200        # Expected HTTP status code
          regex: "{{ team_name }}"  # Expect the team name to be in the response body
      
      # ICMP check example (ping)
      - name: icmp-example
        description: "Checks that all boxes are reachable via ICMP (ping)."
        labelSelector: {}  # Empty selector means apply to all boxes
        interval: 30
        points: 1
        spec:
          type: icmp
          code: 0          # 0 = success (Echo reply)
      
      # SSH check example
      - name: ssh-example
        description: "Checks that box named 'web' is reachable via SSH on port 22."
        interval: 60
        points: 10
        labelSelector:
          "": http
        spec:
          type: ssh
          port: 22
          username: "{{ username }}"
          password: "{{ password }}"
    flag_checks:
      - name: test-flag-check
        description: "Checks for a specific flag in the /tmp directory of the 'web' box."
        points: 25
        attempts: 3
        box_name: web